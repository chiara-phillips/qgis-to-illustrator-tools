name: CI

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2

      - name: Install dependencies (with dev)
        run: poetry install --with dev

      - name: Run pre-commit
        run: poetry run pre-commit run --all-files

#      - name: Run tests
#        run: poetry run pytest

# Install pre-commit hooks (runs on commit)
poetry run pre-commit install

# Install pre-push hooks (runs before push)
poetry run pre-commit install --hook-type pre-push

  tag:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2

      - name: Get version from pyproject.toml
        id: get_version
        run: |
          VERSION=$(poetry version -s)
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Create tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Check if tag already exists
          if git rev-parse "${{ steps.get_version.outputs.version }}" >/dev/null 2>&1; then
            echo "Tag ${{ steps.get_version.outputs.version }} already exists, skipping tag creation"
          else
            git tag ${{ steps.get_version.outputs.version }}
            git push origin ${{ steps.get_version.outputs.version }}
          fi